name: Êõ¥Êñ∞ Kiro ÁâàÊú¨‰ø°ÊÅØ

on:
  schedule:
    # ÊØèÂ∞èÊó∂ËøêË°å‰∏ÄÊ¨°
    - cron: '0 * * * *'
  workflow_dispatch: # ÂÖÅËÆ∏ÊâãÂä®Ëß¶Âèë
  push:
    branches: [ main, master ]
    paths:
      - 'crawler.js'
      - '.github/workflows/update-versions.yml'

jobs:
  update-versions:
    runs-on: ubuntu-latest
    
    steps:
    - name: Ê£ÄÂá∫‰ª£Á†Å
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: ËÆæÁΩÆ Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: ÂÆâË£Ö‰æùËµñ
      run: npm install
      
    - name: ËøêË°åÁà¨Ëô´ËÑöÊú¨
      run: npm start
      
    - name: Ê£ÄÊü•Êñá‰ª∂ÂèòÂåñ
      id: verify-changed-files
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "changed=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Êèê‰∫§Êõ¥Êñ∞
      if: steps.verify-changed-files.outputs.changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "ü§ñ Ëá™Âä®Êõ¥Êñ∞ Kiro ÁâàÊú¨‰ø°ÊÅØ - $(date +'%Y-%m-%d %H:%M:%S')"
        git push
        
    - name: ÂàõÂª∫ÂèëÂ∏ÉÊ†áÁ≠æ (Â¶ÇÊûúÊúâÊñ∞ÁâàÊú¨)
      if: steps.verify-changed-files.outputs.changed == 'true'
      run: |
        # Ëé∑ÂèñÊúÄÊñ∞ÁâàÊú¨Âè∑
        LATEST_VERSION=$(node -e "
          const fs = require('fs');
          try {
            const data = JSON.parse(fs.readFileSync('kiro-versions.json', 'utf8'));
            const versions = Object.values(data.platforms)
              .map(p => p.currentRelease)
              .filter(v => v)
              .sort()
              .reverse();
            console.log(versions[0] || 'unknown');
          } catch(e) {
            console.log('unknown');
          }
        ")
        
        if [ "$LATEST_VERSION" != "unknown" ]; then
          TAG_NAME="data-update-$(date +'%Y%m%d-%H%M%S')"
          git tag -a "$TAG_NAME" -m "Êï∞ÊçÆÊõ¥Êñ∞: Kiro v$LATEST_VERSION"
          git push origin "$TAG_NAME"
          echo "ÂàõÂª∫Ê†áÁ≠æ: $TAG_NAME"
        fi